# Copyright Â© Magento, Inc. All rights reserved.
# See COPYING.txt for license details.

type GiftCardProduct implements ProductInterface, PhysicalProductInterface, CustomizableProductInterface, RoutableInterface @doc(description: "Defines properties of a gift card.") {
    giftcard_amounts: [GiftCardAmounts] @doc(description: "An array that contains information about the values and ID of a gift card.")
    allow_open_amount: Boolean @doc(description: "Indicates whether shoppers have the ability to set the value of the gift card.")
    open_amount_min: Float @doc(description: "The minimum acceptable value of an open amount gift card.")
    open_amount_max: Float @doc(description: "The maximum acceptable value of an open amount gift card.")
    giftcard_type: GiftCardTypeEnum @doc(description: "An enumeration that specifies the type of gift card.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Product\\GiftCard")
    is_redeemable: Boolean @doc(description: "Indicates whether the customer can redeem the value on the card for cash.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Product\\ConfigAttributes")
    lifetime: Int @doc(description: "The number of days after purchase until the gift card expires. A null value means there is no limit.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Product\\ConfigAttributes")
    allow_message: Boolean @doc(description: "Indicates whether the customer can provide a message to accompany the gift card.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Product\\ConfigAttributes")
    message_max_length: Int @doc(description: "The maximum number of characters the gift message can contain.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Product\\MessageMaxLength")
    gift_card_options: [CustomizableOptionInterface!]! @doc(description: "An array of customizable gift card options.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Product\\Options\\GiftCardOptions")
}

type GiftCardAmounts @doc(description: "Contains the value of a gift card, the website that generated the card, and related information.") {
    value_id: Int @deprecated(reason: "Use `uid` instead") @doc(description: "An ID that is assigned to each unique gift card amount.")
    website_id: Int @doc(description: "The ID of the website that generated the gift card.")
    value: Float @doc(description: "The value of the gift card.")
    attribute_id: Int @doc(description: "An internal attribute ID.")
    website_value: Float @doc(description: "The value of the gift card.")
    uid: ID! @doc(description: "The unique ID for a `GiftCardAmounts` object.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Product\\Options\\GiftCardAmountUid")
}

enum GiftCardTypeEnum @doc(description: "Specifies the gift card type.") {
     VIRTUAL
     PHYSICAL
     COMBINED
}

type GiftCardOrderItem implements OrderItemInterface {
    gift_card: GiftCardItem @doc(description: "Selected gift card properties for an order item.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Order\\Item\\GiftCard")
}

type GiftCardInvoiceItem implements InvoiceItemInterface {
    gift_card: GiftCardItem @doc(description: "Selected gift card properties for an invoice item.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Order\\Item\\GiftCard")
}

type GiftCardCreditMemoItem implements CreditMemoItemInterface {
    gift_card: GiftCardItem @doc(description: "Selected gift card properties for a credit memo item.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Order\\Item\\GiftCard")
}

type GiftCardShipmentItem implements ShipmentItemInterface {
    gift_card: GiftCardItem @doc(description: "Selected gift card properties for a shipment item.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\Order\\Item\\GiftCard")
}

type GiftCardItem @doc(description: "Contains details about a gift card.") {
    sender_name: String @doc(description: "The name of the sender of a physical or virtual gift card.")
    sender_email: String @doc(description: "The email address of the sender of a virtual gift card.")
    recipient_name: String @doc(description: "The name of the receiver of a physical or virtual gift card.")
    recipient_email: String @doc(description: "The email address of the receiver of a virtual gift card.")
    message: String @doc(description: "The message from the sender to the recipient.")
}

type GiftCardCartItem implements CartItemInterface @doc(description: "Contains details about a gift card that has been added to a cart.") {
    sender_name: String! @doc(description: "The name of the sender.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\GiftCardCartItem\\SenderName")
    sender_email: String @doc(description: "The email address of the sender.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\GiftCardCartItem\\SenderEmail")
    recipient_name: String! @doc(description: "The name of the person receiving the gift card.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\GiftCardCartItem\\RecipientName")
    recipient_email: String @doc(description: "The email address of the person receiving the gift card.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\GiftCardCartItem\\RecipientEmail")
    amount: Money! @doc(description: "The amount and currency of the gift card.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\GiftCardCartItem\\GiftCardAmount")
    customizable_options: [SelectedCustomizableOption]! @doc(description: "An array of customizations applied to the gift card.") @resolver(class: "Magento\\QuoteGraphQl\\Model\\Resolver\\CustomizableOptions")
    message: String @doc(description: "The message from the sender to the recipient.") @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\GiftCardCartItem\\Message")
}

type GiftCardWishlistItem implements WishlistItemInterface @doc(description: "A single gift card added to a wish list.") {
    gift_card_options: GiftCardOptions! @resolver(class: "Magento\\GiftCardGraphQl\\Model\\Resolver\\GiftCardWishlistItem\\GiftCardOptions") @doc(description: "Details about a gift card.")
}

type GiftCardOptions @doc(description: "Contains details about the sender, recipient, and amount of a gift card.") {
    sender_name: String @doc(description: "The name of the sender.")
    sender_email: String @doc(description: "The email address of the sender.")
    recipient_name: String @doc(description: "The name of the person receiving the gift card.")
    recipient_email: String @doc(description: "The email address of the person receiving the gift card.")
    amount: Money @doc(description: "The amount and currency of the gift card.")
    custom_giftcard_amount: Money @doc(description: "The custom amount and currency of the gift card.")
    message: String @doc(description: "The message from the sender to the recipient.")
}
