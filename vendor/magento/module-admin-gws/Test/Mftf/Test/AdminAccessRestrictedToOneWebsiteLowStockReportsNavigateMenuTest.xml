<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminAccessRestrictedToOneWebsiteLowStockReportsNavigateMenuTest">
        <annotations>
            <features value="AdminGws"/>
            <stories value="Restrict users"/>
            <title value="Test low stock reports navigation for admin with restricted website access"/>
            <description value="Test low stock reports navigation for admin with restricted website access"/>
            <testCaseId value="AC-6028"/>
            <useCaseId value="ACP2E-1017"/>
            <severity value="AVERAGE"/>
            <group value="userRole"/>
        </annotations>
        <before>
            <createData entity="secondCustomWebsite" stepKey="createCustomWebsite"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="login"/>
            <actionGroup ref="AdminStoreGroupCreateActionGroup" stepKey="createNewStore">
                <argument name="Website" value="secondCustomWebsite"/>
                <argument name="storeGroup" value="customStoreGroup"/>
            </actionGroup>
            <waitForPageLoad stepKey="waitForCreateStoreGroup"/>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="createCustomStoreView">
                <argument name="StoreGroup" value="customStoreGroup"/>
                <argument name="customStore" value="customStoreEN"/>
            </actionGroup>
            <magentoCron groups="index" stepKey="reindex"/>
            <waitForPageLoad stepKey="waitForCreateStoreView"/>
            <!-- Created user role Limited with access only to Website2 -->
            <actionGroup ref="AdminCreateUserRoleWithScopeActionGroup" stepKey="createRestrictedAdminRole">
                <argument name="role" value="RestrictedAdminRole"/>
                <argument name="scopeName" value="$createCustomWebsite.website[name]$"/>
            </actionGroup>
            <waitForPageLoad stepKey="waitForCreateUserRole"/>
            <!-- Create user Test for role Limited -->
            <actionGroup ref="AdminCreateUserWithRoleActionGroup" stepKey="createRestrictedAdmin">
                <argument name="role" value="RestrictedAdminRole"/>
                <argument name="user" value="NewAdminUser"/>
            </actionGroup>
            <waitForPageLoad stepKey="waitForCreateUser"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
        </before>
        <after>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="AdminDeleteCustomUserActionGroup" stepKey="deleteUser">
                <argument name="user" value="NewAdminUser"/>
            </actionGroup>
            <actionGroup ref="AdminDeleteUserRoleActionGroup" stepKey="deleteRole">
                <argument name="roleName" value="{{RestrictedAdminRole.name}}"/>
            </actionGroup>
            <actionGroup ref="DeleteCustomWebsiteActionGroup" stepKey="deleteCustomWeWebsite">
                <argument name="websiteName" value="$createCustomWebsite.website[name]$"/>
            </actionGroup>
            <magentoCLI stepKey="reindex" command="indexer:reindex"/>
            <magentoCLI stepKey="flushCache" command="cache:flush"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsAdminUser"/>
        </after>
        <!-- 1. Login into admin panel as Test user -->
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsNewAdminUser">
            <argument name="username" value="{{NewAdminUser.username}}"/>
            <argument name="password" value="{{NewAdminUser.password}}"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForNewaAminUserLogin"/>
        <actionGroup ref="AssertAdminDashboardPageIsVisibleActionGroup" stepKey="seeDashboardPage"/>
        <actionGroup ref="AdminNavigateMenuActionGroup" stepKey="navigateToReportsLowStockPage">
            <argument name="menuUiId" value="{{AdminMenuReports.dataUiId}}"/>
            <argument name="submenuUiId" value="{{AdminMenuReportsProductsLowStock.dataUiId}}"/>
        </actionGroup>
        <actionGroup ref="AdminAssertPageTitleActionGroup" stepKey="seePageTitle">
            <argument name="title" value="{{AdminMenuReportsProductsLowStock.pageTitle}}"/>
        </actionGroup>
        <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsNewAdminUser"/>
    </test>
</tests>
