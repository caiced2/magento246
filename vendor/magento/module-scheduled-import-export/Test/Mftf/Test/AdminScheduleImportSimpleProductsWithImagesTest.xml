<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminScheduleImportSimpleProductsWithImagesTest">
        <annotations>
            <features value="ScheduledImportExport"/>
            <stories value="Import Products"/>
            <title value="Schedule Import for Simple Product with Images"/>
            <description value="Schedules an import of a .csv file containing a simple product with linked images.
            Verifies that the product and images are imported successfully."/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-38949"/>
            <group value="importExport"/>
            <group value="scheduledImportExport"/>
            <group value="remote_storage_disabled"/>
            <group value="pr_exclude"/>
        </annotations>

        <before>
            <!-- Create Product, Create Customer, & Upload Images -->
            <createData entity="ScheduleImportCategory_Simple" stepKey="createScheduleImportCategory"/>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <!-- Copy Images to Import Directory for Product Images -->
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="createDirectory" stepKey="createDirectoryForImportImages">
                <argument name="path">var/import/images/{{ScheduleImportProduct_Simple.name}}</argument>
            </helper>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="copy" stepKey="copyProductBaseImage">
                <argument name="source">dev/tests/acceptance/tests/_data/{{ScheduleImportProduct_Simple.baseImage}}</argument>
                <argument name="destination">var/import/images/{{ScheduleImportProduct_Simple.name}}/{{ScheduleImportProduct_Simple.baseImage}}</argument>
            </helper>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="copy" stepKey="copyProductSmallImage">
                <argument name="source">dev/tests/acceptance/tests/_data/{{ScheduleImportProduct_Simple.smallImage}}</argument>
                <argument name="destination">var/import/images/{{ScheduleImportProduct_Simple.name}}/{{ScheduleImportProduct_Simple.smallImage}}</argument>
            </helper>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="copy" stepKey="copyProductThumbnailImage">
                <argument name="source">dev/tests/acceptance/tests/_data/{{ScheduleImportProduct_Simple.thumbnailImage}}</argument>
                <argument name="destination">var/import/images/{{ScheduleImportProduct_Simple.name}}/{{ScheduleImportProduct_Simple.thumbnailImage}}</argument>
            </helper>

            <!-- Login as Admin -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>

        <after>
            <!-- Delete Data -->
            <deleteData createDataKey="createScheduleImportCategory" stepKey="deleteScheduleImportCategory"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="deleteDirectory" stepKey="deleteProductImageDirectory">
                <argument name="path">var/import/images/{{ScheduleImportProduct_Simple.name}}</argument>
            </helper>
            <deleteData url="/V1/products/{{ScheduleImportProduct_Simple.urlKey}}" stepKey="deleteImportedProduct"/>
            <actionGroup ref="AdminNavigateToScheduledImportsExportsPageActionGroup" stepKey="navigateToScheduledImportsExportsPage"/>
            <actionGroup ref="AdminDeleteAllScheduledImportsExportsActionGroup" stepKey="deleteScheduledImport"/>
            <actionGroup ref="NavigateToAndResetProductGridToDefaultViewActionGroup" stepKey="navigateToAndResetProductGridToDefaultView"/>
            <actionGroup ref="AdminNavigateToConfigurationSystemSectionActionGroup" stepKey="navigateToScheduledImportExportFileHistoryCleaning">
                <argument name="section" value="{{AdminConfigData.sectionHref}}"/>
            </actionGroup>
            <generateDate date="now" format="Y" timezone="UTC" stepKey="currentYear"/>
            <generateDate date="now" format="m" timezone="UTC" stepKey="currentMonth"/>
            <actionGroup ref="AdminConfigClickCleanNowButtonActionGroup" stepKey="deleteScheduledImportExportFiles"/>
            <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertDirectoryEmpty" stepKey="assertImportHistoryFileDeleted">
                <argument name="path">var/import_export/history/{$currentYear}/{$currentMonth}/</argument>
                <argument name="message">var/import_export/history/{$currentYear}/{$currentMonth}/ is not empty.</argument>
            </helper>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
        </after>

        <!-- Create Scheduled Import for Simple Product -->
        <actionGroup ref="AdminNavigateToNewScheduledImportPageActionGroup" stepKey="navigateToNewScheduledImportPage"/>
        <actionGroup ref="AdminFillScheduledImportFormActionGroup" stepKey="fillScheduledImportForm">
            <argument name="name" value="{{ScheduleImportProduct_Simple.importName}}"/>
            <argument name="fileDirectory" value="dev/tests/acceptance/tests/_data"/>
            <argument name="fileName" value="{{ScheduleImportProduct_Simple.fileName}}"/>
            <argument name="imagesFileDirectory" value="var/import/images/{{ScheduleImportProduct_Simple.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminClickSaveScheduledImportExportActionGroup" stepKey="clickSave"/>
        <actionGroup ref="AdminFilterLegacyGridActionGroup" stepKey="filterGrid">
            <argument name="field" value="{{AdminLegacyDataGridFilterSection.inputFieldByNameAttr('name')}}"/>
            <argument name="value" value="{{ScheduleImportProduct_Simple.importName}}"/>
        </actionGroup>
        <actionGroup ref="AdminAssertSavedScheduledImportExportActionGroup" stepKey="verifyScheduledImportRow">
            <argument name="name" value="{{ScheduleImportProduct_Simple.importName}}"/>
            <argument name="lastOutcome" value="Pending"/>
        </actionGroup>

        <!-- Run Scheduled Import for Simple Product -->
        <actionGroup ref="AdminRunSavedScheduledImportExportActionGroup" stepKey="runImport"/>
        <generateDate date="now" format="Y" timezone="UTC" stepKey="currentYear"/>
        <generateDate date="now" format="m" timezone="UTC" stepKey="currentMonth"/>
        <generateDate date="now" format="d" timezone="UTC" stepKey="currentDay"/>
        <generateDate date="now" format="H" timezone="UTC" stepKey="currentHour"/>
        <generateDate date="now" format="i" timezone="UTC" stepKey="currentMinute"/>
        <actionGroup ref="AdminAssertSavedScheduledImportExportActionGroup" stepKey="verifyScheduledImportRow2">
            <argument name="name" value="{{ScheduleImportProduct_Simple.importName}}"/>
            <argument name="lastOutcome" value="Successful"/>
        </actionGroup>

        <!-- Reindex -->
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
            <argument name="indices" value=""/>
        </actionGroup>

        <!-- Admin: Verify Data on Import History Page -->
        <actionGroup ref="AdminNavigateToImportHistoryPageActionGroup" stepKey="navigateToImportHistoryPage"/>
        <actionGroup ref="AdminGridSortColumnDescendingActionGroup" stepKey="sortColumnByIdDescending">
            <argument name="columnLabel" value="history_id"/>
        </actionGroup>
        <see userInput="{{ScheduleImportProduct_Simple.importSummary}}" selector="{{AdminDataGridTableSection.firstRow}}" stepKey="seeSummary"/>

        <!-- Admin: Verify Tmp Import & Import History Files -->
        <grabTextFrom selector="{{AdminImportHistorySection.importedFileName('1')}}" stepKey="importedFileName"/>
        <executeJS function="return '{$importedFileName}'.split('_')[1]" stepKey="tmpImportedFileName"/>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileExists" stepKey="assertImportHistoryFileExists">
            <argument name="filePath">var/import_export/history/{$currentYear}/{$currentMonth}/{$currentDay}/{$currentHour}-{$currentMinute}_import_catalog_product.csv</argument>
            <argument name="message">var/import_export/history/{$currentYear}/{$currentMonth}/{$currentDay}/{$currentHour}-{$currentMinute}_import_catalog_product.csv does not exist.</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertImportHistoryFileContainsExpectedText">
            <argument name="filePath">var/import_export/history/{$currentYear}/{$currentMonth}/{$currentDay}/{$currentHour}-{$currentMinute}_import_catalog_product.csv</argument>
            <argument name="text">{$tmpImportedFileName}</argument>
            <argument name="message">var/import_export/history/{$currentYear}/{$currentMonth}/{$currentDay}/{$currentHour}-{$currentMinute}_import_catalog_product.csv does not contain string "{$tmpImportedFileName}.csv".</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileExists" stepKey="assertTmpImportFileExists">
            <argument name="filePath">var/tmp/{$tmpImportedFileName}</argument>
            <argument name="message">var/tmp/{$tmpImportedFileName} does not exist.</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertTmpImportFileContainsExpectedText">
            <argument name="filePath">var/tmp/{$tmpImportedFileName}</argument>
            <argument name="text">{{ScheduleImportProduct_Simple.name}}</argument>
            <argument name="message">var/tmp/{$tmpImportedFileName} does not contain string "{{ScheduleImportProduct_Simple.name}}".</argument>
        </helper>

        <!-- Admin: Download Import History File & Verify Content -->
        <actionGroup ref="AdminDownloadImportHistoryFileActionGroup" stepKey="downloadImportedFile"/>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileExists" stepKey="assertDownloadedImportHistoryFileExists">
            <argument name="filePath">var/import_history/{$importedFileName}</argument>
            <argument name="message">var/import_history/{$importedFileName} does not exist.</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertDownloadedImportHistoryFileContainsExpectedText">
            <argument name="filePath">var/import_history/{$importedFileName}</argument>
            <argument name="text">{{ScheduleImportProduct_Simple.name}}</argument>
            <argument name="message">var/import_history/{$importedFileName} does not contain string "{{ScheduleImportProduct_Simple.name}}".</argument>
        </helper>

        <!-- Admin: Verify Simple Product on Edit Product Page -->
        <actionGroup ref="NavigateToCreatedProductEditPageActionGroup" stepKey="goToSimpleProductEditPage">
            <argument name="product" value="ScheduleImportProduct_Simple"/>
        </actionGroup>
        <actionGroup ref="AdminAssertProductInfoOnEditPageActionGroup" stepKey="assertSimpleProductOnEditPage">
            <argument name="productStatus" value="{{ScheduleImportProduct_Simple.status}}"/>
            <argument name="productName" value="{{ScheduleImportProduct_Simple.name}}"/>
            <argument name="productSku" value="{{ScheduleImportProduct_Simple.sku}}"/>
            <argument name="productPrice" value="{{ScheduleImportProduct_Simple.price}}"/>
            <argument name="productQuantity" value="{{ScheduleImportProduct_Simple.quantity}}"/>
            <argument name="productWeight" value="{{ScheduleImportProduct_Simple.weight}}"/>
            <argument name="categoryName" value="{{ScheduleImportCategory_Simple.name}}"/>
        </actionGroup>
        <actionGroup ref="AdminAssertProductImageOnProductPageActionGroup" stepKey="assertProductBaseImageOnEditPage">
            <argument name="image" value="{{ScheduleImportProduct_Simple.baseImageName}}"/>
        </actionGroup>
        <seeElement selector="{{AdminProductImagesSection.imageFileRoleByImage(ScheduleImportProduct_Simple.baseImageName, 'image')}}" stepKey="seeBaseImageRole"/>
        <actionGroup ref="AdminAssertProductImageOnProductPageActionGroup" stepKey="assertProductSmallImageOnEditPage">
            <argument name="image" value="{{ScheduleImportProduct_Simple.smallImageName}}"/>
        </actionGroup>
        <seeElement selector="{{AdminProductImagesSection.imageFileRoleByImage(ScheduleImportProduct_Simple.smallImageName, 'small_image')}}" stepKey="seeSmallImageRole"/>
        <actionGroup ref="AdminAssertProductImageOnProductPageActionGroup" stepKey="assertProductThumbnailImageOnEditPage">
            <argument name="image" value="{{ScheduleImportProduct_Simple.thumbnailImageName}}"/>
        </actionGroup>
        <seeElement selector="{{AdminProductImagesSection.imageFileRoleByImage(ScheduleImportProduct_Simple.thumbnailImageName, 'thumbnail')}}" stepKey="seeThumbnailImageRole"/>

        <!-- Storefront: Verify Simple Product In Category -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginStorefront">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="goToCategoryPage">
            <argument name="categoryUrl" value="{{ScheduleImportCategory_Simple.name_lwr}}"/>
        </actionGroup>
        <seeNumberOfElements selector="{{StorefrontCategoryMainSection.productName}}" userInput="1" stepKey="seeOnly1Product"/>
        <see selector="{{StorefrontCategoryMainSection.productName}}" userInput="{{ScheduleImportProduct_Simple.name}}" stepKey="seeProduct"/>

        <!-- Storefront: Verify Simple Product Info & Images -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductStorefrontPage">
            <argument name="productUrl" value="{{ScheduleImportProduct_Simple.urlKey}}"/>
        </actionGroup>
        <see userInput="{{ScheduleImportProduct_Simple.name}}" selector="{{StorefrontProductInfoMainSection.productName}}" stepKey="seeProductName"/>
        <see userInput="{{ScheduleImportProduct_Simple.sku}}" selector="{{StorefrontProductInfoMainSection.productSku}}" stepKey="seeSku"/>
        <see userInput="${{ScheduleImportProduct_Simple.price}}" selector="{{StorefrontProductInfoMainSection.productPrice}}" stepKey="seePrice"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.productImageSrc(ScheduleImportProduct_Simple.baseImageName)}}" stepKey="seeProductBaseImage"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.productImageSrc(ScheduleImportProduct_Simple.smallImageName)}}" stepKey="seeProductSmallImage"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.productImageSrc(ScheduleImportProduct_Simple.thumbnailImageName)}}" stepKey="seeProductThumbnailImage"/>

        <!-- Purchase Simple Product -->
        <actionGroup ref="StorefrontAddToTheCartActionGroup" stepKey="addProductToCart"/>
        <actionGroup ref="StorefrontOpenCheckoutPageActionGroup" stepKey="navigateToCheckoutPage"/>
        <actionGroup ref="StorefrontSetShippingMethodActionGroup" stepKey="selectFlatRateShippingMethod"/>
        <actionGroup ref="StorefrontCheckoutClickNextOnShippingStepActionGroup" stepKey="clickNextOnShippingStep"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectCheckMoneyOrder"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="clickPlacePurchaseOrder"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="grabOrderNumber"/>

        <!-- Confirm Purchased Simple Product -->
        <actionGroup ref="StorefrontOpenOrderFromSuccessPageActionGroup" stepKey="openOrderFromSuccessPage">
            <argument name="orderNumber" value="{$grabOrderNumber}"/>
        </actionGroup>
        <actionGroup ref="StorefrontVerifyCustomerOrderProductRowDataActionGroup" stepKey="verifyProductRowInOrder">
            <argument name="name" value="{{ScheduleImportProduct_Simple.name}}"/>
            <argument name="sku" value="{{ScheduleImportProduct_Simple.sku}}"/>
            <argument name="price" value="${{ScheduleImportProduct_Simple.price}}"/>
            <argument name="quantity" value="1"/>
            <argument name="subtotal" value="${{ScheduleImportProduct_Simple.price}}"/>
            <argument name="index" value="1"/>
        </actionGroup>
    </test>
</tests>
