<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="DynamicBlockContentGetsUpdatedFromDynamicBlockEntityTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Dynamic Block"/>
            <title value="Dynamic Block Content Gets Updated from Dynamic Block Entity"/>
            <description value="Verify that a Dynamic Block's attributes update correctly in the areas that it is
            referenced. Includes checking changes to Dynamic Block name, type, customer segment, status, and inner
            content. Test checks in admin on Page Builder stages, edit forms, and on the storefront."/>
            <severity value="BLOCKER"/>
            <testCaseId value="PB-897"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-ee"/>
            <group value="pagebuilder-dynamic-block"/>
            <group value="pagebuilder-dynamic-block-content"/>
        </annotations>

        <before>
            <!-- Create CMS Page, Dynamic Block, & Customer Segment -->
            <createData entity="_defaultCmsPage" stepKey="createCMSPage"/>
            <createData entity="_defaultDynamicBlock" stepKey="createDynamicBlock"/>
            <createData entity="customerSegmentForGuests" stepKey="createCustomerSegment">
                <field key="apply_to">0</field>
            </createData>

            <!-- Add Buttons Content Type to Dynamic Block -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedDynamicBlockActionGroup" stepKey="navigateToCreatedDynamicBlock">
                <argument name="Banner" value="$$createDynamicBlock$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="removeContentTypeFromStageByIndex" stepKey="removeHTMLContentType">
                <argument name="contentType" value="PageBuilderHtmlContentType"/>
                <argument name="contentTypeNumber" value="1"/>
            </actionGroup>
            <actionGroup ref="confirmRemovalModal" stepKey="confirmRemovalModal"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
            <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
            </actionGroup>
            <actionGroup ref="dragContentTypeToContainer" stepKey="dragButtonToRow">
                <argument name="contentType" value="PageBuilderButtonsContentType"/>
                <argument name="containerTargetType" value="PageBuilderRowContentType"/>
            </actionGroup>
            <actionGroup ref="inlineEditButton" stepKey="inlineEditButton">
                <argument name="text" value="PageBuilderButtonItemText_First"/>
            </actionGroup>
            <actionGroup ref="unFocusOptionMenu" stepKey="unFocusOptionMenu">
                <argument name="contentType" value="PageBuilderButtonItemContentType"/>
            </actionGroup>
            <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
            <actionGroup ref="SaveAndContinueDynamicBlockActionGroup" stepKey="saveDynamicBlock"/>
        </before>

        <after>
            <!-- Delete Data -->
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="DeleteBannerActionGroup" stepKey="deleteDynamicBlock">
                <argument name="bannerName" value="{{sampleBanner.Name}}"/>
            </actionGroup>
            <actionGroup ref="FindAndDeleteCustomerSegmentActionGroup" stepKey="deleteCustomerSegment">
                <argument name="segmentName" value="$$createCustomerSegment.name$$"/>
            </actionGroup>
            <magentoCron groups="index" stepKey="reindex"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <closeTab stepKey="closeOpenedTab"/>
        </after>

        <!-- Add Dynamic Block to CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="removeContentTypeFromStageByIndex" stepKey="removeHTMLContentType">
            <argument name="contentType" value="PageBuilderHtmlContentType"/>
            <argument name="contentTypeNumber" value="1"/>
        </actionGroup>
        <actionGroup ref="confirmRemovalModal" stepKey="confirmRemovalModal"/>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPageBuilderPanelMenuSection">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToContainer" stepKey="dragDynamicBlockToRootContainer">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openPageBuilderEditPanel">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchAndSelectDynamicBlockInGrid" stepKey="searchAndSelectDynamicBlockInGrid">
            <argument name="block" value="$$createDynamicBlock$$"/>
        </actionGroup>
        <actionGroup ref="AdminValidateEditDynamicBlockSlideOutActionGroup" stepKey="validateDynamicBlockOnEditForm">
            <argument name="name" value="$$createDynamicBlock.name$$"/>
        </actionGroup>
        <actionGroup ref="AdminClickSelectDynamicBlockButtonOnSlideOutActionGroup" stepKey="clickSelectDynamicBlock"/>
        <actionGroup ref="AdminSearchDynamicBlockInGridActionGroup" stepKey="searchDynamicBlockInGrid">
            <argument name="block" value="$$createDynamicBlock$$"/>
        </actionGroup>
        <actionGroup ref="AdminValidateSelectDynamicBlockGridSlideOutActionGroup" stepKey="validateDynamicBlockOnGrid">
            <argument name="name" value="$$createDynamicBlock.name$$"/>
        </actionGroup>
        <actionGroup ref="AdminCloseSelectDynamicBlockSlideOutActionGroup" stepKey="closeSelectDynamicBlockSlideOut"/>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>

        <!-- Validate Dynamic Block On CMS Page Stage -->
        <waitForElementVisible selector="{{DynamicBlockOnStage.all}}" stepKey="waitForDynamicBlockOnCMSPageStage"/>
        <waitForElementVisible selector="{{ButtonItemOnStorefront.buttonItemText('1', PageBuilderButtonItemText_First.value)}}" stepKey="waitForButtonInDynamicBlockOnCMSPageStage"/>

        <!-- Save CMS Page -->
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>

        <!-- Validate Dynamic Block On CMS Page Storefront -->
        <openNewTab stepKey="openNewTab"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <waitForElementVisible selector="{{DynamicBlockOnStorefront.all}}" stepKey="waitForDynamicBlockOnStorefront"/>
        <waitForElementVisible selector="{{ButtonItemOnStorefront.buttonItemText('1', PageBuilderButtonItemText_First.value)}}" stepKey="waitForButtonInDynamicBlockOnStorefront"/>

        <!-- Change Button Text in Dynamic Block in Default Store Scope -->
        <switchToNextTab stepKey="switchToNextTab"/>
        <actionGroup ref="NavigateToCreatedDynamicBlockActionGroup" stepKey="navigateToCreatedDynamicBlock">
            <argument name="Banner" value="$$createDynamicBlock$$"/>
        </actionGroup>
        <scrollToTopOfPage stepKey="scrollToTopOfDynamicBlockPage"/>
        <actionGroup ref="ChangeDynamicBlockScopeActionGroup" stepKey="changeScopeToDefault"/>
        <uncheckOption selector="{{BannerContentSection.UseDefaultValue}}" stepKey="uncheckUseDefaultValue"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage4"/>
        <actionGroup ref="inlineEditButton" stepKey="inlineEditButtonUpdate">
            <argument name="text" value="PageBuilderButtonItemText_Second"/>
        </actionGroup>
        <actionGroup ref="unFocusOptionMenu" stepKey="unFocusOptionMenuUpdate">
            <argument name="contentType" value="PageBuilderButtonItemContentType"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen2"/>
        <actionGroup ref="SaveAndContinueDynamicBlockActionGroup" stepKey="saveDynamicBlock"/>

        <!-- Verify Dynamic Block Button Unchanged on CMS Page Stage -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage2">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage2"/>
        <waitForElementVisible selector="{{DynamicBlockOnStage.all}}" stepKey="waitForDynamicBlockOnCMSPageStage2"/>
        <waitForElementVisible selector="{{ButtonItemOnStorefront.buttonItemText('1', PageBuilderButtonItemText_First.value)}}" stepKey="waitForButtonInDynamicBlockUnchangedOnCMSPageStage"/>

        <!-- Verify Dynamic Block Button Changed on Storefront -->
        <actionGroup ref="switchTabAndReloadPage" stepKey="switchTabAndReloadPage"/>
        <waitForElementVisible selector="{{DynamicBlockOnStorefront.all}}" stepKey="waitForDynamicBlockOnStorefront2"/>
        <waitForElementVisible selector="{{ButtonItemOnStorefront.buttonItemText('1', PageBuilderButtonItemText_Second.value)}}" stepKey="waitForButtonInDynamicBlockChangedOnStorefront"/>

        <!-- Change Dynamic Block Name, Type, Segment -->
        <switchToNextTab stepKey="switchToNextTab2"/>
        <actionGroup ref="NavigateToCreatedDynamicBlockActionGroup" stepKey="navigateToCreatedDynamicBlock2">
            <argument name="Banner" value="$$createDynamicBlock$$"/>
        </actionGroup>
        <actionGroup ref="AdminSelectDynamicBlockTypeActionGroup" stepKey="updateDynamicBlockType">
            <argument name="type" value="{{sampleBanner.Type}}"/>
        </actionGroup>
        <actionGroup ref="AdminSelectDynamicBlockCustomerSegmentActionGroup" stepKey="updateDynamicBlockCustomerSegment">
            <argument name="customerSegment" value="$$createCustomerSegment.name$$"/>
        </actionGroup>
        <actionGroup ref="FillDynamicBlockNameActionGroup" stepKey="updateDynamicBlockName">
            <argument name="Banner" value="sampleBanner"/>
        </actionGroup>
        <actionGroup ref="AdminOpenPageBuilderFromContentPreviewOverlayActionGroup" stepKey="openPageBuilderFullScreen"/>
        <actionGroup ref="inlineEditButton" stepKey="inlineEditButtonNewUpdate">
            <argument name="text" value="PageBuilderButtonItemText_Third"/>
        </actionGroup>
        <actionGroup ref="unFocusOptionMenu" stepKey="unFocusOptionMenuNewUpdate">
            <argument name="contentType" value="PageBuilderButtonItemContentType"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen3"/>
        <actionGroup ref="SaveAndContinueDynamicBlockActionGroup" stepKey="saveDynamicBlock2"/>

        <!-- Verify Dynamic Block Button, Name, Type, & Segment Changed on CMS Page Stage -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage3">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage3"/>
        <waitForElementVisible selector="{{DynamicBlockOnStage.all}}" stepKey="waitForDynamicBlockOnCMSPageStage3"/>
        <waitForElementVisible selector="{{ButtonItemOnStorefront.buttonItemText('1', PageBuilderButtonItemText_Third.value)}}" stepKey="waitForButtonInDynamicBlockChangedOnCMSPageStage"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openPageBuilderEditPanel2">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="AdminValidateEditDynamicBlockSlideOutActionGroup" stepKey="validateDynamicBlockOnEditForm2">
            <argument name="name" value="{{sampleBanner.Name}}"/>
            <argument name="customerSegment" value="$$createCustomerSegment.name$$"/>
        </actionGroup>
        <actionGroup ref="AdminClickSelectDynamicBlockButtonOnSlideOutActionGroup" stepKey="clickSelectDynamicBlock2"/>
        <actionGroup ref="AdminSearchDynamicBlockInGridActionGroup" stepKey="searchDynamicBlockInGrid2">
            <argument name="block" value="sampleBanner"/>
        </actionGroup>
        <actionGroup ref="AdminValidateSelectDynamicBlockGridSlideOutActionGroup" stepKey="validateDynamicBlockOnGrid2">
            <argument name="name" value="{{sampleBanner.Name}}"/>
            <argument name="type" value="{{sampleBanner.Type}}"/>
            <argument name="customerSegment" value="$$createCustomerSegment.name$$"/>
            <argument name="visibility" value="{{_defaultStore.name}}"/>
        </actionGroup>

        <!-- Verify Dynamic Block Button Unchanged on Storefront -->
        <actionGroup ref="switchTabAndReloadPage" stepKey="switchTabAndReloadPage2"/>
        <waitForElementVisible selector="{{DynamicBlockOnStorefront.all}}" stepKey="waitForDynamicBlockOnStorefront3"/>
        <waitForElementVisible selector="{{ButtonItemOnStorefront.buttonItemText('1', PageBuilderButtonItemText_Second.value)}}" stepKey="waitForButtonInDynamicBlockUnchangedOnStorefront"/>

        <!-- Disable Dynamic Block -->
        <switchToNextTab stepKey="switchToNextTab3"/>
        <actionGroup ref="NavigateToCreatedDynamicBlockActionGroup" stepKey="navigateToCreatedDynamicBlock4">
            <argument name="Banner" value="sampleBanner"/>
        </actionGroup>
        <click selector="{{AdminBannerBasicActionSection.EnableBanner}}" stepKey="disableDynamicBlock"/>
        <actionGroup ref="SaveAndContinueDynamicBlockActionGroup" stepKey="saveDisabledDynamicBlock"/>

        <!-- Verify Dynamic Block Disabled on CMS Page Stage -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage4">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage8"/>
        <waitForElementVisible selector="{{DynamicBlockOnStage.all}}" stepKey="waitForDynamicBlockOnCMSPageStage4"/>
        <waitForElementVisible selector="{{DynamicBlockOnStage.status('1', 'Dynamic Block disabled')}}" stepKey="waitForDisabledDynamicBlock"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openPageBuilderEditPanel3">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="AdminValidateEditDynamicBlockSlideOutActionGroup" stepKey="validateDynamicBlockOnEditForm3">
            <argument name="name" value="{{sampleBanner.Name}}"/>
            <argument name="status" value="Disabled"/>
            <argument name="customerSegment" value="$$createCustomerSegment.name$$"/>
        </actionGroup>
        <actionGroup ref="AdminClickSelectDynamicBlockButtonOnSlideOutActionGroup" stepKey="clickSelectDynamicBlock3"/>
        <actionGroup ref="AdminSearchDynamicBlockInGridActionGroup" stepKey="searchDynamicBlockInGrid3">
            <argument name="block" value="sampleBanner"/>
        </actionGroup>
        <actionGroup ref="AdminValidateSelectDynamicBlockGridSlideOutActionGroup" stepKey="validateDynamicBlockOnGrid3">
            <argument name="name" value="{{sampleBanner.Name}}"/>
            <argument name="type" value="{{sampleBanner.Type}}"/>
            <argument name="customerSegment" value="$$createCustomerSegment.name$$"/>
            <argument name="visibility" value="{{_defaultStore.name}}"/>
            <argument name="status" value="Disabled"/>
        </actionGroup>

        <!-- Verify Dynamic Block Disabled on Storefront -->
        <actionGroup ref="switchTabAndReloadPage" stepKey="switchTabAndReloadPage3"/>
        <waitForElement selector="{{DynamicBlockOnStorefront.all}}" stepKey="waitForDynamicBlockOnStorefront4"/>
        <dontSeeElement selector="{{ButtonItemOnStorefront.buttonItemText('1', PageBuilderButtonItemText_Second.value)}}" stepKey="dontSeeDynamicBlockContentsOnStorefront"/>
    </test>
</tests>
