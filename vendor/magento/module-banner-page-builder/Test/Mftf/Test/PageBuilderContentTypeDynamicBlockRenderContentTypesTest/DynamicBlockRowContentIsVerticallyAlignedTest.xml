<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="DynamicBlockRowContentIsVerticallyAlignedTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Dynamic Block"/>
            <title value="Row Content Can Be Vertically Aligned In Dynamic Block"/>
            <description value="A user can vertically align row contents in a Dynamic Block"/>
            <severity value="BLOCKER"/>
            <useCaseId value="MC-4280"/>
            <testCaseId value="MC-5062"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-ee"/>
            <group value="pagebuilder-dynamic-block"/>
            <group value="pagebuilder-dynamic-block-content"/>
            <group value="pagebuilder-row"/>
        </annotations>
        <before>
            <createData entity="_defaultDynamicBlock" stepKey="createDynamicBlock"/>
            <createData entity="_defaultCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="NavigateToCreatedDynamicBlockActionGroup" stepKey="navigateToCreatedDynamicBlock">
                <argument name="Banner" value="$$createDynamicBlock$$"/>
            </actionGroup>
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
            <actionGroup ref="moveContentTypeToContainer" stepKey="moveBannerToLeftColumn">
                <argument name="contentType" value="PageBuilderHtmlContentType"/>
                <argument name="contentTypeIndex" value="1"/>
                <argument name="containerTargetType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetIndex" value="1"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSPage" stepKey="deletePreReqCMSPage"/>
            <actionGroup ref="DeleteBannerActionGroup" stepKey="deleteDynamicBlock">
                <argument name="bannerName" value="$$createDynamicBlock.name$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Edit Dynamic Block and configure Row - Vertical Align Bottom -->
        <comment userInput="Edit Block and configure row vertical align bottom" stepKey="commentConfigureRowVerticalAlignBottom"/>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditMenuOnStage">
            <argument name="contentType" value="PageBuilderRowContentType"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightProperty">
            <argument name="property" value="PageBuilderMinHeightProperty_500px"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="enterVerticalAlignmentBottomProperty">
            <argument name="property" value="PageBuilderVerticalAlignmentPropertyBottom"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveRowEditPanelSettings"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueDynamicBlockActionGroup" stepKey="clickDynamicBlockSaveButton"/>
        <!-- Go to CMS page and choose Dynamic Block -->
        <comment userInput="Go to CMS page and choose Dynamic Block" stepKey="commentGoToCMSPage"/>
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandMenuSectionAddContent">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDrop">
            <argument name="contentType" value="PageBuilderDynamicBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchAndSelectDynamicBlockInGrid" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createDynamicBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <!-- Verify Vertical Alignment On Stage - Before Save -->
        <comment userInput="Verify min height and vertical alignment on stage before save" stepKey="commentVerifyMinHeightAndVerticalAlignmentOnStageBeforeSave"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRowMinHeightBeforeSave">
            <argument name="selector" value="({{RowOnStorefront.inner('1')}}{{DynamicBlockOnStorefront.ancestor}})[1]"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500.value}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRowVerticalAlignmentBottomBeforeSave">
            <argument name="selector" value="({{RowOnStorefront.inner('1')}}{{DynamicBlockOnStorefront.ancestor}})[1]"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="verifyVerticalAlignmentBottomInBlock" stepKey="verifyBottomAlignmentBeforeSave">
            <argument name="block" value="DynamicBlockOnStorefront"/>
            <argument name="container" value="RowOnStorefront"/>
            <argument name="content" value="HtmlOnStorefront"/>
            <argument name="padding" value="PageBuilderPaddingProperty0"/>
            <argument name="minHeight" value="PageBuilderMinHeightProperty_500px.intValue"/>
        </actionGroup>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen1"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStageAfterSave"/>
        <!-- Verify Vertical Alignment On Stage - After Save -->
        <comment userInput="Verify min height and vertical alignment on stage after save" stepKey="commentVerifyMinHeightAndVerticalAlignmentOnStageAfterSave"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRowMinHeightAfterSave">
            <argument name="selector" value="({{RowOnStorefront.inner('1')}}{{DynamicBlockOnStorefront.ancestor}})[1]"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500.value}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRowVerticalAlignmentBottomAfterSave">
            <argument name="selector" value="({{RowOnStorefront.inner('1')}}{{DynamicBlockOnStorefront.ancestor}})[1]"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="verifyVerticalAlignmentBottomInBlock" stepKey="verifyBottomAlignmentAfterSave">
            <argument name="block" value="DynamicBlockOnStorefront"/>
            <argument name="container" value="RowOnStorefront"/>
            <argument name="content" value="HtmlOnStorefront"/>
            <argument name="padding" value="PageBuilderPaddingProperty0"/>
            <argument name="minHeight" value="PageBuilderMinHeightProperty_500px.intValue"/>
        </actionGroup>
        <!-- Verify Min Height and Vertical Alignment In Storefront -->
        <comment userInput="Verify min height and vertical alignment in storefront" stepKey="commentVerifyMinHeightAndVerticalAlignmentInStorefront"/>
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRowMinHeightStorefront">
            <argument name="selector" value="({{RowOnStorefront.inner('1')}}{{DynamicBlockOnStorefront.ancestor}})[1]"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_500.value}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeRowVerticalAlignmentBottomStorefront">
            <argument name="selector" value="({{RowOnStorefront.inner('1')}}{{DynamicBlockOnStorefront.ancestor}})[1]"/>
            <argument name="expectedProperty" value="{{PageBuilderVerticalAlignmentPropertyBottom.value}}"/>
            <argument name="cssProperty" value="justifyContent"/>
        </actionGroup>
        <actionGroup ref="verifyVerticalAlignmentBottomInBlock" stepKey="verifyBottomAlignmentStorefront">
            <argument name="block" value="DynamicBlockOnStorefront"/>
            <argument name="container" value="RowOnStorefront"/>
            <argument name="content" value="HtmlOnStorefront"/>
            <argument name="minHeight" value="PageBuilderMinHeightProperty_500px.intValue"/>
            <argument name="padding" value="PageBuilderPaddingProperty0"/>
            <argument name="storefrontBugOffset" value="20"/>
        </actionGroup>
    </test>
</tests>
