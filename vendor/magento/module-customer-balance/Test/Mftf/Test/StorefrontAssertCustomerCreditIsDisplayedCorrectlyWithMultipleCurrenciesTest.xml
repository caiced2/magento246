<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright © Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontAssertCustomerCreditIsDisplayedCorrectlyWithMultipleCurrenciesTest">
        <annotations>
            <features value="CustomerBalance"/>
            <stories value="Apply store credit"/>
            <title value="Assert store credit is displayed in selected currency"/>
            <description value="Check that store credit amount is displayed correctly in selected currency on checkout page"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-42186"/>
            <useCaseId value="MC-38051"/>
            <group value="customerBalance"/>
        </annotations>
        <before>
            <magentoCLI command="config:set {{SetAllowedCurrenciesConfigForUSD.path}} {{SetAllowedCurrenciesConfigForUSD.value}},{{SetAllowedCurrenciesConfigForEUR.value}}" stepKey="setAllowedCurrencyEURandUSD"/>
            <createData entity="SimpleProduct2" stepKey="createSimpleProduct"/>
            <createData entity="Simple_Customer_Without_Address" stepKey="createCustomer"/>
            <magentoCron groups="index" stepKey="reindex"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="AdminOpenCurrencyRatesPageActionGroup" stepKey="gotToCurrencyRatesPage"/>
            <actionGroup ref="AdminSetCurrencyRatesActionGroup" stepKey="revertCurrencyRates">
                <argument name="firstCurrency" value="USD"/>
                <argument name="secondCurrency" value="EUR"/>
                <argument name="rate" value="0.7067"/>
            </actionGroup>
            <magentoCLI command="config:set {{SetCurrencyUSDBaseConfig.path}} {{SetCurrencyUSDBaseConfig.value}}" stepKey="setCurrencyBaseUSD"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogout"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <actionGroup ref="AdminOpenCurrencyRatesPageActionGroup" stepKey="gotToCurrencyRatesPage"/>
        <actionGroup ref="AdminSetCurrencyRatesActionGroup" stepKey="setCurrencyRates">
            <argument name="firstCurrency" value="USD"/>
            <argument name="secondCurrency" value="EUR"/>
            <argument name="rate" value="0.8"/>
        </actionGroup>
        <actionGroup ref="OpenEditCustomerFromAdminActionGroup" stepKey="openCustomerEditPage">
            <argument name="customer" value="$createCustomer$" />
        </actionGroup>
        <actionGroup ref="UpdateCustomerStoreCreditBalanceAdminActionGroup" stepKey="updateStoreCreditFromAdmin">
            <argument name="storeCredit" value="1000" />
        </actionGroup>
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefrontAccount">
            <argument name="Customer" value="$createCustomer$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForCustomerLogin"/>
        <actionGroup ref="StorefrontSwitchCurrencyActionGroup" stepKey="switchCurrencyToEUR"/>
        <actionGroup ref="AssertStorefrontCustomerCreditLeftActionGroup" stepKey="checkCustomerInfStoreCreditFromStoreFront">
            <argument name="storeCreditLeft" value="€800.00"/>
        </actionGroup>
        <actionGroup ref="OpenStoreFrontProductPageActionGroup" stepKey="navigateToSimpleProductPage">
            <argument name="productUrlKey" value="$createSimpleProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="addToCartSimpleProductFromStorefrontProductPage">
            <argument name="productName" value="$createSimpleProduct.name$"/>
        </actionGroup>
        <actionGroup ref="ClickViewAndEditCartFromMiniCartActionGroup" stepKey="goToShoppingCartFromMinicart"/>
        <click selector="{{CheckoutCartSummarySection.proceedToCheckout}}" stepKey="clickProceedToCheckout"/>
        <waitForPageLoad stepKey="waitForProceedToCheckout"/>
        <actionGroup ref="CustomerCheckoutFillNewShippingAddressActionGroup" stepKey="fillShippingAddress">
            <argument name="address" value="US_Address_TX"/>
        </actionGroup>
        <actionGroup ref="CheckoutSelectFlatRateShippingMethodActionGroup" stepKey="selectFlatRateShippingMethod"/>
        <!-- Click next button to open payment section -->
        <actionGroup ref="StorefrontGuestCheckoutProceedToPaymentStepActionGroup" stepKey="clickNext"/>
        <waitForPageLoad stepKey="waitForBillingPage"/>
        <see selector="{{CheckoutStoreCreditSection.availableAmount}}" userInput="800.00" stepKey="seeCreditAmountInEUR"/>
    </test>
</tests>
