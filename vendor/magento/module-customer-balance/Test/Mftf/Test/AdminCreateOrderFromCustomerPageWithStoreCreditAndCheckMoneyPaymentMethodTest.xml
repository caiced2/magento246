<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateOrderFromCustomerPageWithStoreCreditAndCheckMoneyPaymentMethodTest">
        <annotations>
            <stories value="Customer balance"/>
            <title value="Create order from admin customer page using store credit"/>
            <description value="Create order from admin customer edit page using store credit, check money payment, flat rate shipping"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-25576"/>
            <group value="sales"/>
            <group value="customer_balance"/>
            <group value="gift_card"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <createData entity="GiftCardCodePool" stepKey="createCodePool"/>
            <createData entity="GiftCardAccount100" stepKey="createGiftCard"/>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <createData entity="VirtualProduct" stepKey="createVirtualProduct">
                <field key="price">100.00</field>
            </createData>
            <createData entity="defaultSimpleProduct" stepKey="createSimpleProduct">
                <field key="price">580.00</field>
            </createData>
            <magentoCLI command="config:set {{enabledCheckMoneyOrder.label}} {{enabledCheckMoneyOrder.value}}" stepKey="enableCheckMoneyOrder"/>
            <createData entity="FlatRateShippingMethodConfig" stepKey="enableFlatRate"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>
        </before>
        <after>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="customerLogout"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createVirtualProduct" stepKey="deleteVirtualProduct"/>
            <createData entity="DefaultShippingMethodsConfig" stepKey="defaultShippingMethodsConfig"/>
            <actionGroup ref="AdminDeleteAllGiftCardAccountsActionGroup" stepKey="deleteGiftCard"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutFromAdmin"/>
        </after>
        <actionGroup ref="AdminGrabLastGiftCardAccountCodeActionGroup" stepKey="grabGiftCardCode"/>
        <actionGroup ref="AdminOpenCustomerEditPageActionGroup" stepKey="openCustomerEditPageForUpdateStoreCreditBalance">
            <argument name="customerId" value="$createCustomer.id$"/>
        </actionGroup>
        <actionGroup ref="UpdateCustomerStoreCreditBalanceAdminActionGroup" stepKey="updateStoreCreditThirdCustomerFromAdmin">
            <argument name="storeCredit" value="5" />
        </actionGroup>
        <actionGroup ref="AdminOpenCustomerEditPageActionGroup" stepKey="openCustomerEditPage">
            <argument name="customerId" value="$createCustomer.id$"/>
        </actionGroup>
        <click selector="{{AdminCustomerMainActionsSection.createOrderBtn}}" stepKey="clickCreateOrder"/>
        <actionGroup ref="AddSimpleProductToOrderActionGroup" stepKey="addVirtualProductToOrder">
            <argument name="product" value="$createVirtualProduct$"/>
            <argument name="productQty" value="1"/>
        </actionGroup>
        <actionGroup ref="AdminAddToOrderGiftCardCodeActionGroup" stepKey="addGiftCardCode">
            <argument name="giftCard" value="{$grabGiftCardCode}"/>
        </actionGroup>
        <actionGroup ref="AddSimpleProductToOrderActionGroup" stepKey="addSimpleProductToOrder">
            <argument name="product" value="$createSimpleProduct$"/>
            <argument name="productQty" value="1"/>
        </actionGroup>
        <actionGroup ref="FillOrderCustomerInformationActionGroup" stepKey="fillCustomerInfo">
            <argument name="customer" value="$createCustomer$"/>
            <argument name="address" value="US_Address_CA"/>
        </actionGroup>
        <actionGroup ref="AdminOrderCreateUseStoreCreditActionGroup" stepKey="useStoreCredit"/>
        <actionGroup ref="OrderSelectFlatRateShippingActionGroup" stepKey="selectFlatRate"/>
        <actionGroup ref="AdminSubmitOrderActionGroup" stepKey="submitOrder"/>
        <grabTextFrom selector="{{AdminOrderDetailsInformationSection.orderId}}" stepKey="getOrderId"/>
        <actionGroup ref="VerifyCreatedOrderInformationActionGroup" stepKey="verifyCreatedOrderInformation"/>
        <actionGroup ref="AssertOrderButtonsAvailableActionGroup" stepKey="assertOrderButtonsAvailable"/>
        <scrollTo selector="{{AdminOrderTotalSection.grandTotal}}" stepKey="scrollToOrderTotalSection"/>
        <see selector="{{AdminOrderTotalSection.grandTotal}}" userInput="$580.00" stepKey="checkGrandTotal"/>
        <see selector="{{AdminOrderTotalSection.storeCredit}}" userInput="-$5.00" stepKey="checkStoreCredit"/>
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAsCustomer">
            <argument name="Customer" value="$createCustomer$"/>
        </actionGroup>
        <actionGroup ref="StorefrontCustomerOrdersViewOrderActionGroup" stepKey="openOrderStorefront">
            <argument name="orderNumber" value="{$getOrderId}"/>
        </actionGroup>
        <see selector="{{StorefrontSalesOrderSection.salesOrderPrice('grand_total')}}" userInput="$580.00" stepKey="checkGrandTotalStorefront"/>
        <see selector="{{StorefrontCustomerOrderViewSection.storeCredit}}" userInput="-$5.00" stepKey="checkStoreCreditStorefront"/>
    </test>
</tests>
